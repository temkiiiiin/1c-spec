
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаПоДокументу = СписокНоменклатуры.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// Считываем учетную политику
	УчетнаяПолитика = РегистрыСведений.УчетнаяПолитика.ПолучитьПоследнее(Дата);
	Если ЗначениеЗаполнено(УчетнаяПолитика.УчетнаяПолитика) Тогда 
		МетодСписания = УчетнаяПолитика.УчетнаяПолитика;

		// Делаем выборку данных
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	МИНИМУМ(РасходнаяНакладнаяСписокНоменклатуры.НомерСтроки) КАК НомерСтроки,
			|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
			|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
			|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК Стоимость,
			|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
			|ПОМЕСТИТЬ втДанныеДокумента
			|ИЗ
			|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
			|ГДЕ
			|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура,
			|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ВидНоменклатуры
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втДанныеДокумента.НомерСтроки КАК НомерСтроки,
			|	втДанныеДокумента.Номенклатура КАК Номенклатура,
			|	втДанныеДокумента.Количество КАК Количество,
			|	втДанныеДокумента.Стоимость КАК Стоимость,
			|	втДанныеДокумента.ВидНоменклатуры КАК ВидНоменклатуры,
			|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
			|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.СтоимостьОстаток, 0) КАК СтоимостьОстаток,
			|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.Партия, ЗНАЧЕНИЕ(Документ.ПриходнаяНакладная.)) КАК Партия
			|ИЗ
			|	втДанныеДокумента КАК втДанныеДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
			|				&МоментВремени,
			|				Номенклатура В
			|					(ВЫБРАТЬ
			|						втДанныеДокумента.Номенклатура
			|					ИЗ
			|						втДанныеДокумента КАК втДанныеДокумента)) КАК ОстаткиНоменклатурыОстатки
			|		ПО втДанныеДокумента.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
			|
			|УПОРЯДОЧИТЬ ПО
			|	ОстаткиНоменклатурыОстатки.Партия.МоментВремени
			|ИТОГИ
			|	МИНИМУМ(НомерСтроки),
			|	МАКСИМУМ(Количество),
			|	МАКСИМУМ(Стоимость),
			|	МАКСИМУМ(ВидНоменклатуры),
			|	СУММА(КоличествоОстаток),
			|	СУММА(СтоимостьОстаток)
			|ПО
			|	Номенклатура";

		Запрос.УстановитьПараметр("МоментВремени", ?(РежимПроведения = РежимПроведенияДокумента.Оперативный, Неопределено, МоментВремени()));
		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		// Устанавливаем сортировку согласно текущему методу списания
		Если МетодСписания = Перечисления.УчетнаяПолитика.ЛИФО Тогда 
			Запрос.Текст = СтрЗаменить(
				Запрос.Текст, "
				|УПОРЯДОЧИТЬ ПО
				|	ОстаткиНоменклатурыОстатки.Партия.МоментВремени",
				"
				|УПОРЯДОЧИТЬ ПО
				|	ОстаткиНоменклатурыОстатки.Партия.МоментВремени УБЫВ"
			);
		КонецЕсли;

		Движения.ОстаткиНоменклатуры.Очистить();
		Движения.ОстаткиНоменклатуры.Записать();

		Движения.Продажи.Очистить();

		Блокировки = Новый БлокировкаДанных;
		Блокировка = Блокировки.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
		Блокировка.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.ИсточникДанных = СписокНоменклатуры;
		Блокировка.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		Блокировки.Заблокировать();

		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		// Выполняем обход выборки
		Пока ВыборкаНоменклатура.Следующий() Цикл
			Себестоимость = 0;

			// Если НЕ Услуга, то пытаемся сделать движения по регистру Остатки товаров
			Если Не ВыборкаНоменклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Услуга Тогда
				// Проверяем, хватает ли вообще товарононов. Если нет - сообщаем о нехватке и запрещаем проведение
				// документа
				Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстаток Тогда 
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Не хватает номенклатуры " + ВыборкаНоменклатура.Номенклатура;;
					Сообщение.Поле = "Товары[" + Строка(ВыборкаНоменклатура.НомерСтроки - 1) + "].Количество";
					Сообщение.УстановитьДанные(ЭтотОбъект);
					Сообщение.Сообщить();
					Отказ = Истина;
					Продолжить;
				КонецЕсли;

				ОсталосьСписать = ВыборкаНоменклатура.Количество;
				Выборка = ВыборкаНоменклатура.Выбрать();
				Пока Выборка.Следующий() Цикл
					Списать = Мин(ОсталосьСписать, Выборка.КоличествоОстаток);
					Если Списать = Выборка.КоличествоОстаток Тогда 
						Стоимость = Выборка.СтоимостьОстаток;
					Иначе 
						Стоимость = Списать * Выборка.СтоимостьОстаток / Выборка.КоличествоОстаток;
					КонецЕсли;

					Движение = Движения.ОстаткиНоменклатуры.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = Дата;
					Движение.Партия = Выборка.Партия;
					Движение.Номенклатура = Выборка.Номенклатура;
					Движение.Количество = Списать;
					Движение.Стоимость = Стоимость;

					ОсталосьСписать = ОсталосьСписать - Списать;
					Себестоимость = Себестоимость + Стоимость;
					Если ОсталосьСписать = 0 Тогда 
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;

			Движение = Движения.Продажи.Добавить();
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
			Движение.Количество = ВыборкаНоменклатура.Количество;
			Движение.Стоимость = ВыборкаНоменклатура.Стоимость;
			Движение.Себестоимость = Себестоимость;
		КонецЦикла;
	Иначе
		// Отменяем проведение, если учетная политика не заполнена
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Учетная политика не задана!";
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда 
		Движения.ОстаткиНоменклатуры.Записывать = Истина;
		Движения.Продажи.Записывать = Истина;
		
		// регистр Управленческий 
		Движения.Управленческий.Записывать = Истина;
		Движение = Движения.Управленческий.Добавить();
		Движение.СчетДт = ПланыСчетов.Управленческий.Покупатели;
		Движение.СчетКт = ПланыСчетов.Управленческий.ПрибылиУбытки;
		Движение.Период = Дата;
		Движение.Сумма = СуммаПоДокументу;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = Контрагент;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.ДоговорКонтрагента] = ДоговорКонтрагента;
	КонецЕсли;
КонецПроцедуры
